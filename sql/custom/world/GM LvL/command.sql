/*
Navicat MySQL Data Transfer

Source Server         : SERVER AH 10.96.2.9
Source Server Version : 50505
Source Host           : 10.96.2.9:3306
Source Database       : legion_world

Target Server Type    : MYSQL
Target Server Version : 50505
File Encoding         : 65001

Date: 2020-03-27 11:40:23
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for command
-- ----------------------------
DROP TABLE IF EXISTS `command`;
CREATE TABLE `command` (
  `name` varchar(50) NOT NULL DEFAULT '',
  `security` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `help` longtext,
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED COMMENT='Chat System';

-- ----------------------------
-- Records of command
-- ----------------------------
INSERT INTO `command` VALUES ('account lock', '0', 'Syntax: .account lock [on|off]\r\n\r\nAllow login from account only from current used IP or remove this requirement.');
INSERT INTO `command` VALUES ('account', '2', 'Syntax: .account\r\n\r\nDisplay the access level of your account.');
INSERT INTO `command` VALUES ('commands', '0', 'Syntax: .commands\r\n\r\nDisplay a list of available commands for your account level.');
INSERT INTO `command` VALUES ('dismount', '1', 'Syntax: .dismount\r\n\r\nDismount you, if you are mounted.');
INSERT INTO `command` VALUES ('gm ingame', '0', 'Syntax: .gm ingame\r\n\r\nDisplay a list of available in game Game Masters.');
INSERT INTO `command` VALUES ('help', '0', 'Syntax: .help [$command]\r\n\r\nDisplay usage instructions for the given $command. If no $command provided show list available commands.');
INSERT INTO `command` VALUES ('save', '0', 'Syntax: .save\r\n\r\nSaves your character.');
INSERT INTO `command` VALUES ('server motd', '1', 'Syntax: .server motd\r\n\r\nShow server Message of the day.');
INSERT INTO `command` VALUES ('unstuck', '1', 'Syntax: .unstuck $playername [inn/graveyard/startzone]\n\nTeleports specified player to specified location. Default location is player\'s current hearth location.');
INSERT INTO `command` VALUES ('freeze', '1', 'Syntax: .freeze (#player)\r\n\"Freezes\" #player and disables his chat. When using this without #name it will freeze your target.');
INSERT INTO `command` VALUES ('gmannounce', '3', 'Syntax: .gmannounce $announcement\r\nSend an announcement to online Gamemasters.');
INSERT INTO `command` VALUES ('go', '2', 'Syntax: .go $subcommand\nType .go to see the list of possible subcommands or .help go $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('summon', '1', 'Syntax: .summon [$charactername]\r\n\r\nTeleport the given character to you. Character can be offline.');
INSERT INTO `command` VALUES ('gps', '2', 'Syntax: .gps [$name|$shift-link]\r\n\r\nDisplay the position information for a selected character or creature (also if player name $name provided then for named player, or if creature/gameobject shift-link provided then pointed creature/gameobject if it loaded). Position information includes X, Y, Z, and orientation, map Id and zone Id');
INSERT INTO `command` VALUES ('listfreeze', '3', 'Syntax: .listfreeze\r\n\r\nSearch and output all frozen players.');
INSERT INTO `command` VALUES ('mute', '1', 'Syntax: .mute [$playerName] $timeInMinutes [$reason]\r\n\r\nDisible chat messaging for any character from account of character $playerName (or currently selected) at $timeInMinutes minutes. Player can be offline.');
INSERT INTO `command` VALUES ('appear', '1', 'Syntax: .appear [$charactername]\r\n\r\nTeleport to the given character. Either specify the character name or click on the character\'s portrait,e.g. when you are in a group. Character can be offline.');
INSERT INTO `command` VALUES ('recall', '1', 'Syntax: .recall [$playername]\r\n\r\nTeleport $playername or selected player to the place where he has been before last use of a teleportation command. If no $playername is entered and no player is selected, it will teleport you.');
INSERT INTO `command` VALUES ('server info', '1', 'Syntax: .server info\r\n\r\nDisplay server version and the number of connected players.');
INSERT INTO `command` VALUES ('tele name', '1', 'Syntax: .tele name [#playername] #location\n\nTeleport the given character to a given location. Character can be offline.\n\nTo teleport to homebind, set #location to \"$home\" (without quotes).');
INSERT INTO `command` VALUES ('tele', '1', 'Syntax: .tele #location\r\n\r\nTeleport player to a given location.');
INSERT INTO `command` VALUES ('ticket unassign', '1', 'Usage: .ticket unassign $ticketid.\r\nUnassigns the specified ticket from the current assigned Game Master.');
INSERT INTO `command` VALUES ('ticket onlinelist', '1', 'Displays a list of open GM tickets whose owner is online.');
INSERT INTO `command` VALUES ('ticket reset', '1', 'Syntax: .ticket reset\nRemoves all closed tickets and resets the counter, if no pending open tickets are existing.');
INSERT INTO `command` VALUES ('ticket list', '1', 'Displays a list of open GM tickets.');
INSERT INTO `command` VALUES ('ticket delete', '1', 'Usage: .ticket delete $ticketid.\r\nDeletes the specified ticket permanently. Ticket must be closed first.');
INSERT INTO `command` VALUES ('ticket comment', '1', 'Usage: .ticket comment $ticketid $comment.\r\nAllows the adding or modifying of a comment to the specified ticket.');
INSERT INTO `command` VALUES ('ticket closedlist', '1', 'Displays a list of closed GM tickets.');
INSERT INTO `command` VALUES ('ticket close', '1', 'Usage: .ticket close $ticketid.\r\nCloses the specified ticket. Does not delete permanently.');
INSERT INTO `command` VALUES ('ticket assign', '1', 'Usage: .ticket assign $ticketid $gmname.\r\nAssigns the specified ticket to the specified Game Master.');
INSERT INTO `command` VALUES ('unfreeze', '1', 'Syntax: .unfreeze (#player)\r\n\"Unfreezes\" #player and enables his chat again. When using this without #name it will unfreeze your target.');
INSERT INTO `command` VALUES ('unmute', '1', 'Syntax: .unmute [$playerName]\r\n\r\nRestore chat messaging for any character from account of character $playerName (or selected). Character can be ofline.');
INSERT INTO `command` VALUES ('whispers', '2', 'Syntax: .whispers on|off\r\nEnable/disable accepting whispers by GM from players. By default use trinityd.conf setting.');
INSERT INTO `command` VALUES ('debug phase', '4', 'Syntax: .debug phase\r\n\r\nSends a phase debug report of a player to you.');
INSERT INTO `command` VALUES ('announce', '2', 'Syntax: .announce $MessageToBroadcast\r\n\r\nSend a global message to all players online in chat log.');
INSERT INTO `command` VALUES ('combatstop', '4', 'Syntax: .combatstop [$playername]\r\nStop combat for selected character. If selected non-player then command applied to self. If $playername provided then attempt applied to online player $playername.');
INSERT INTO `command` VALUES ('demorph', '2', 'Syntax: .demorph\r\n\r\nDemorph the selected player.');
INSERT INTO `command` VALUES ('cheat explore', '4', 'Syntax: .cheat explore #flag\r\nReveal or hide all maps for the selected player. If no player is selected, hide or reveal maps to you.\r\nUse a #flag of value 1 to reveal, use a #flag value of 0 to hide all maps.');
INSERT INTO `command` VALUES ('gm chat', '1', 'Syntax: .gm chat [on/off]\r\n\r\nEnable or disable chat GM MODE (show gm badge in messages) or show current state of on/off not provided.');
INSERT INTO `command` VALUES ('gm visible', '2', 'Syntax: .gm visible on/off\r\n\r\nOutput current visibility state or make GM visible(on) and invisible(off) for other players.');
INSERT INTO `command` VALUES ('gm', '1', 'Syntax: .gm [on/off]\r\n\r\nEnable or Disable in game GM MODE or show current state of on/off not provided.');
INSERT INTO `command` VALUES ('gmnameannounce', '3', 'Syntax: .gmnameannounce $announcement.\r\nSend an announcement to all online GM\'s, displaying the name of the sender.');
INSERT INTO `command` VALUES ('gmnotify', '4', 'Syntax: .gmnotify $notification\r\nDisplays a notification on the screen of all online GM\'s.');
INSERT INTO `command` VALUES ('go creature', '4', 'Syntax: .go creature #creature_guid\r\nTeleport your character to creature with guid #creature_guid.\r\n.gocreature #creature_name\r\nTeleport your character to creature with this name.\r\n.gocreature id #creature_id\r\nTeleport your character to a creature that was spawned from the template with this entry.\r\n*If* more than one creature is found, then you are teleported to the first that is found inside the database.');
INSERT INTO `command` VALUES ('go graveyard', '4', 'Syntax: .go graveyard #graveyardId\r\n Teleport to graveyard with the graveyardId specified.');
INSERT INTO `command` VALUES ('go grid', '4', 'Syntax: .go grid #gridX #gridY [#mapId]\r\n\r\nTeleport the gm to center of grid with provided indexes at map #mapId (or current map if it not provided).');
INSERT INTO `command` VALUES ('go object', '4', 'Syntax: .go object #object_guid\r\nTeleport your character to gameobject with guid #object_guid');
INSERT INTO `command` VALUES ('go taxinode', '4', 'Syntax: .go taxinode #taxinode\r\n\r\nTeleport player to taxinode coordinates. You can look up zone using .lookup taxinode $namepart');
INSERT INTO `command` VALUES ('ticket', '1', 'Syntax: .ticket $subcommand\nType .ticket to see the list of possible subcommands or .help ticket $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('go trigger', '4', 'Syntax: .go trigger #trigger_id\r\n\r\nTeleport your character to areatrigger with id #trigger_id. Character will be teleported to trigger target if selected areatrigger is telporting trigger.');
INSERT INTO `command` VALUES ('go xyz', '2', 'Syntax: .go xyz #x #y [#z [#mapid [#orientation]]]\r\n\r\nTeleport player to point with (#x,#y,#z) coordinates at map #mapid with orientation #orientation. If z is not provided, ground/water level will be used. If mapid is not provided, the current map will be used. If #orientation is not provided, the current orientation will be used.');
INSERT INTO `command` VALUES ('go zonexy', '4', 'Syntax: .go zonexy #x #y [#zone]\r\n\r\nTeleport player to point with (#x,#y) client coordinates at ground(water) level in zone #zoneid or current zone if #zoneid not provided. You can look up zone using .lookup area $namepart');
INSERT INTO `command` VALUES ('nameannounce', '2', 'Syntax: .nameannounce $announcement.\nSend an announcement to all online players, displaying the name of the sender.');
INSERT INTO `command` VALUES ('pinfo', '2', 'Syntax: .pinfo [$player_name/#GUID]\r\n\r\nOutput account information for selected player or player find by $player_name or #GUID.');
INSERT INTO `command` VALUES ('repairitems', '4', 'Syntax: .repairitems\r\n\r\nRepair all selected player\'s items.');
INSERT INTO `command` VALUES ('cheat taxi', '4', 'Syntax: .cheat taxi on/off\r\nTemporary grant access or remove to all taxi routes for the selected character.\r\n If no character is selected, hide or reveal all routes to you.Visited taxi nodes sill accessible after removing access.');
INSERT INTO `command` VALUES ('cheat status', '4', 'Syntax: .cheat status \n\nShows the cheats you currently have enabled.');
INSERT INTO `command` VALUES ('lookup title', '4', 'Syntax: .lookup title $$namepart\r\n\r\nLooks up a title by $namepart, and returns all matches with their title ID\'s and index\'s.');
INSERT INTO `command` VALUES ('morph', '2', 'Syntax: .morph #displayid\r\n\r\nChange your current model id to #displayid.');
INSERT INTO `command` VALUES ('modify currency', '4', 'Syntax: .modify currency #id #value\nAdd $amount (without precision) of $currency to the selected player.');
INSERT INTO `command` VALUES ('cheat', '4', 'Syntax: .cheat $subcommand\r\nType .cheat to see the list of possible subcommands or .help cheat $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('cheat god', '4', 'Syntax: .cheat god [on/off]\r\nEnables or disables your character\'s ability to take damage.');
INSERT INTO `command` VALUES ('cheat casttime', '4', 'Syntax: .cheat casttime [on/off]\r\nEnables or disables your character\'s spell cast times.');
INSERT INTO `command` VALUES ('cheat cooldown', '4', 'Syntax: .cheat cooldown [on/off]\r\nEnables or disables your character\'s spell cooldowns.');
INSERT INTO `command` VALUES ('cheat power', '4', 'Syntax: .cheat power [on/off]\r\nEnables or disables your character\'s spell cost (e.g mana).');
INSERT INTO `command` VALUES ('cheat waterwalk', '4', 'Syntax: .cheat waterwalk on/off\r\nSet on/off waterwalk state for selected player or self if no player selected.');
INSERT INTO `command` VALUES ('anticheat global', '4', 'Syntax: .anticheat\nglobal returns the total amount reports and the average. (top three players)');
INSERT INTO `command` VALUES ('anticheat player', '4', 'Syntax: .anticheat player $name returns the players\'s total amount of warnings, the average and the\namount of each cheat type.');
INSERT INTO `command` VALUES ('anticheat handle', '4', 'Syntax: .anticheat handle [on|off] Turn on/off the\nAntiCheat-Detection .');
INSERT INTO `command` VALUES ('anticheat delete', '4', 'Syntax: .anticheat delete [deleteall|$name] Deletes the report records of all the players or deletes all the reports of player $name.');
INSERT INTO `command` VALUES ('npc near', '4', 'Syntax: .npc near  [#distance]\r\n\r\nOutput npc at distance #distance from player. Output npc guids and coordinates sorted by distance from character. If #distance not provided use 10 as default value.');
INSERT INTO `command` VALUES ('account set addon', '4', 'Syntax: .account set addon [$account] #addon\n\nSet user (possible targeted) expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk, 3 - cata.');
INSERT INTO `command` VALUES ('account set', '4', 'Syntax: .account set $subcommand\nType .account set to see the list of possible subcommands or .help account set $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('additem', '5', 'Syntax: .additem #itemid/[#itemname]/#shift-click-item-link #itemcount\r\n\r\nAdds the specified number of items of id #itemid (or exact (!) name $itemname in brackets, or link created by shift-click at item in inventory or recipe) to your or selected character inventory. If #itemcount is omitted, only one item will be added.\r\n.');
INSERT INTO `command` VALUES ('additemset', '5', 'Syntax: .additemset #itemsetid\r\n\r\nAdd items from itemset of id #itemsetid to your or selected character inventory. Will add by one example each item from itemset.');
INSERT INTO `command` VALUES ('aura', '2', 'Syntax: .aura #spellid\r\n\r\nAdd the aura from spell #spellid to the selected Unit.');
INSERT INTO `command` VALUES ('ban account', '3', 'Syntax: .ban account $Name $bantime $reason\r\nBan account kick player.\r\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
INSERT INTO `command` VALUES ('ban character', '3', 'Syntax: .ban character $Name $bantime $reason\nBan character and kick player.\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
INSERT INTO `command` VALUES ('ban ip', '3', 'Syntax: .ban ip $Ip $bantime $reason\r\nBan IP.\r\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
INSERT INTO `command` VALUES ('ban', '3', 'Syntax: .ban $subcommand\nType .ban to see the list of possible subcommands or .help ban $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('baninfo account', '3', 'Syntax: .baninfo account $accountid\r\nWatch full information about a specific ban.');
INSERT INTO `command` VALUES ('baninfo character', '3', 'Syntax: .baninfo character $charactername \r\nWatch full information about a specific ban.');
INSERT INTO `command` VALUES ('baninfo ip', '3', 'Syntax: .baninfo ip $ip\r\nWatch full information about a specific ban.');
INSERT INTO `command` VALUES ('baninfo', '3', 'Syntax: .baninfo $subcommand\nType .baninfo to see the list of possible subcommands or .help baninfo $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('bank', '4', 'Syntax: .bank\r\n\r\nShow your bank inventory.');
INSERT INTO `command` VALUES ('banlist account', '4', 'Syntax: .banlist account [$Name]\r\nSearches the banlist for a account name pattern or show full list account bans.');
INSERT INTO `command` VALUES ('banlist character', '4', 'Syntax: .banlist character $Name\r\nSearches the banlist for a character name pattern. Pattern required.');
INSERT INTO `command` VALUES ('banlist ip', '4', 'Syntax: .banlist ip [$Ip]\r\nSearches the banlist for a IP pattern or show full list of IP bans.');
INSERT INTO `command` VALUES ('banlist', '4', 'Syntax: .banlist $subcommand\nType .banlist to see the list of possible subcommands or .help banlist $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('bindsight', '4', 'Syntax: .bindsight\r\n\r\nBinds vision to the selected unit indefinitely. Cannot be used while currently possessing a target.');
INSERT INTO `command` VALUES ('cast back', '4', 'Syntax: .cast back #spellid [triggered]\r\n  Selected target will cast #spellid to your character. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('cast dist', '4', 'Syntax: .cast dist #spellid [#dist [triggered]]\r\n  You will cast spell to pint at distance #dist. If \'trigered\' or part provided then spell casted with triggered flag. Not all spells can be casted as area spells.');
INSERT INTO `command` VALUES ('cast self', '4', 'Syntax: .cast self #spellid [triggered]\r\nCast #spellid by target at target itself. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('cast target', '4', 'Syntax: .cast target #spellid [triggered]\r\n  Selected target will cast #spellid to his victim. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('cast', '4', 'Syntax: .cast #spellid [triggered]\r\n  Cast #spellid to selected target. If no target selected cast to self. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('character customize', '4', 'Syntax: .character customize [$name]\r\n\r\nMark selected in game or by $name in command character for customize at next login.');
INSERT INTO `command` VALUES ('character level', '5', 'Syntax: .character level [$playername] [#level]\r\n\r\nSet the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
INSERT INTO `command` VALUES ('character rename', '4', 'Syntax: .character rename [$name]\r\n\r\nMark selected in game or by $name in command character for rename at next login.');
INSERT INTO `command` VALUES ('character reputation', '4', 'Syntax: .character reputation [$player_name]\r\n\r\nShow reputation information for selected player or player find by $player_name.');
INSERT INTO `command` VALUES ('cometome', '4', 'SYntax: .cometome $parameter\nMake selected creature come to your current location (new position not saved to DB).');
INSERT INTO `command` VALUES ('cooldown', '2', 'Syntax: .cooldown [#spell_id]\r\n\r\nRemove all (if spell_id not provided) or #spel_id spell cooldown from selected character or you (if no selection).');
INSERT INTO `command` VALUES ('damage', '4', 'Syntax: .damage $damage_amount [$school [$spellid]]\r\n\r\nApply $damage to target. If not $school and $spellid provided then this flat clean melee damage without any modifiers. If $school provided then damage modified by armor reduction (if school physical),\n and target absorbing modifiers and result applied as melee damage to target. If spell provided then damage modified and applied as spell damage. $spellid can be shift-link.');
INSERT INTO `command` VALUES ('debug arena', '4', 'Syntax: .debug arena\r\n\r\nToggle debug mode for arenas. In debug mode GM can start arena with single player.');
INSERT INTO `command` VALUES ('debug bg', '4', 'Syntax: .debug bg\r\n\r\nToggle debug mode for battlegrounds. In debug mode GM can start battleground with single player.');
INSERT INTO `command` VALUES ('debug play cinematic', '4', 'Syntax: .debug play cinematic #cinematicid\r\n\r\nPlay cinematic #cinematicid for you. You stay at place while your mind fly.\r\n');
INSERT INTO `command` VALUES ('debug play movie', '4', 'Syntax: .debug play movie #movieid\r\n\r\nPlay movie #movieid for you.');
INSERT INTO `command` VALUES ('debug play sound', '4', 'Syntax: .debug play sound #soundid\r\n\r\nPlay sound with #soundid.\r\nSound will be play only for you. Other players do not hear this.\r\nWarning: client may have more 5000 sounds...');
INSERT INTO `command` VALUES ('debug', '4', 'Syntax: .debug $subcommand\nType .debug to see the list of possible subcommands or .help debug $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('die', '4', 'Syntax: .die\r\n\r\nKill the selected player. If no player is selected, it will kill you.');
INSERT INTO `command` VALUES ('distance', '4', 'Syntax: .distance\r\n\r\nDisplay the distance from your character to the selected creature.');
INSERT INTO `command` VALUES ('event activelist', '4', 'Syntax: .event activelist\r\nShow list of currently active events.');
INSERT INTO `command` VALUES ('event start', '4', 'Syntax: .event start #event_id\r\nStart event #event_id. Set start time for event to current moment (change not saved in DB).');
INSERT INTO `command` VALUES ('event stop', '4', 'Syntax: .event stop #event_id\r\nStop event #event_id. Set start time for event to time in past that make current moment is event stop time (change not saved in DB).');
INSERT INTO `command` VALUES ('event', '4', 'Syntax: .event #event_id\r\nShow details about event with #event_id.');
INSERT INTO `command` VALUES ('gm fly', '2', 'Syntax: .gm fly [on/off]\r\nEnable/disable gm fly mode.');
INSERT INTO `command` VALUES ('gm list', '3', 'Syntax: .gm list\r\n\r\nDisplay a list of all Game Masters accounts and security levels.');
INSERT INTO `command` VALUES ('gobject activate', '4', 'Syntax: .gobject activate #guid\r\n\r\nActivates an object like a door or a button.');
INSERT INTO `command` VALUES ('gobject add', '4', 'Syntax: .gobject add #id <spawntimeSecs>\r\n\r\nAdd a game object from game object templates to the world at your current location using the #id.\r\nspawntimesecs sets the spawntime, it is optional.\r\n\r\nNote: this is a copy of .gameobject.');
INSERT INTO `command` VALUES ('gobject delete', '4', 'Syntax: .gobject delete #go_guid\r\nDelete gameobject with guid #go_guid.');
INSERT INTO `command` VALUES ('gobject move', '4', 'Syntax: .gobject move #goguid [#x #y #z]\r\n\r\nMove gameobject #goguid to character coordinates (or to (#x,#y,#z) coordinates if its provide).');
INSERT INTO `command` VALUES ('gobject near', '4', 'Syntax: .gobject near  [#distance]\r\n\r\nOutput gameobjects at distance #distance from player. Output gameobject guids and coordinates sorted by distance from character. If #distance not provided use 10 as default value.');
INSERT INTO `command` VALUES ('gobject add temp', '4', 'Adds a temporary gameobject that is not saved to DB.');
INSERT INTO `command` VALUES ('gobject target', '3', 'Syntax: .gobject target [#go_id|#go_name_part]\r\n\r\nLocate and show position nearest gameobject. If #go_id or #go_name_part provide then locate and show position of nearest gameobject with gameobject template id #go_id or name included #go_name_part as part.');
INSERT INTO `command` VALUES ('gobject set phase', '4', 'Syntax: .gobject set phase #guid #phasemask\r\n\r\nGameobject with DB guid #guid phasemask changed to #phasemask with related world vision update for players. Gameobject state saved to DB and persistent.');
INSERT INTO `command` VALUES ('gobject turn', '4', 'Syntax: .gobject turn #goguid \r\n\r\nSet for gameobject #goguid orientation same as current character orientation.');
INSERT INTO `command` VALUES ('gobject', '4', 'Syntax: .gobject $subcommand\nType .gobject to see the list of possible subcommands or .help gobject $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('groupsummon', '2', 'Syntax: .groupsummon [$charactername]\r\n\r\nTeleport the given character and his group to you. Teleported only online characters but original selected group member can be offline.');
INSERT INTO `command` VALUES ('guid', '4', 'Syntax: .guid\r\n\r\nDisplay the GUID for the selected character.');
INSERT INTO `command` VALUES ('guild create', '5', 'Syntax: .guild create [$GuildLeaderName] \"$GuildName\"\r\n\r\nCreate a guild named $GuildName with the player $GuildLeaderName (or selected) as leader.  Guild name must in quotes.');
INSERT INTO `command` VALUES ('guild delete', '5', 'Syntax: .guild delete \"$GuildName\"\r\n\r\nDelete guild $GuildName. Guild name must in quotes.');
INSERT INTO `command` VALUES ('guild invite', '5', 'Syntax: .guild invite [$CharacterName] \"$GuildName\"\r\n\r\nAdd player $CharacterName (or selected) into a guild $GuildName. Guild name must in quotes.');
INSERT INTO `command` VALUES ('guild rank', '5', 'Syntax: .guild rank [$CharacterName] #Rank\r\n\r\nSet for player $CharacterName (or selected) rank #Rank in a guild.');
INSERT INTO `command` VALUES ('guild uninvite', '5', 'Syntax: .guild uninvite [$CharacterName]\r\n\r\nRemove player $CharacterName (or selected) from a guild.');
INSERT INTO `command` VALUES ('guild', '5', 'Syntax: .guild $subcommand\nType .guild to see the list of possible subcommands or .help guild $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('hidearea', '4', 'Syntax: .hidearea #areaid\r\n\r\nHide the area of #areaid to the selected character. If no character is selected, hide this area to you.');
INSERT INTO `command` VALUES ('honor add', '5', 'Syntax: .honor add $amount\r\n\r\nAdd a certain amount of honor (gained today) to the selected player.');
INSERT INTO `command` VALUES ('honor add kill', '5', 'Syntax: .honor add kill\r\n\r\nAdd the targeted unit as one of your pvp kills today (you only get honor if it\'s a racial leader or a player)');
INSERT INTO `command` VALUES ('honor update', '5', 'Syntax: .honor update\r\n\r\nForce the yesterday\'s honor fields to be updated with today\'s data, which will get reset for the selected player.');
INSERT INTO `command` VALUES ('honor', '5', 'Syntax: .honor $subcommand\nType .honor to see the list of possible subcommands or .help honor $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('modify talentpoints', '5', 'Syntax: .modify talentpoints #amount\r\n\r\nSet free talent points for selected character or character\'s pet. It will be reset to default expected at next levelup/login/quest reward.');
INSERT INTO `command` VALUES ('instance listbinds', '4', 'Syntax: .instance listbinds\r\n  Lists the binds of the selected player.');
INSERT INTO `command` VALUES ('instance savedata', '4', 'Syntax: .instance savedata\r\n  Save the InstanceData for the current player\'s map to the DB.');
INSERT INTO `command` VALUES ('instance stats', '4', 'Syntax: .instance stats\r\n  Shows statistics about instances.');
INSERT INTO `command` VALUES ('instance unbind', '4', 'Syntax: .instance unbind <mapid|all> [difficulty]\r\n  Clear all/some of player\'s binds');
INSERT INTO `command` VALUES ('instance', '4', 'Syntax: .instance $subcommand\nType .instance to see the list of possible subcommands or .help instance $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('itemmove', '4', 'Syntax: .itemmove #sourceslotid #destinationslotid\r\n\r\nMove an item from slots #sourceslotid to #destinationslotid in your inventory\r\n\r\nNot yet implemented');
INSERT INTO `command` VALUES ('kick', '3', 'Syntax: .kick [$charactername] [$reason]\r\n\r\nKick the given character name from the world with or without reason. If no character name is provided then the selected player (except for yourself) will be kicked. If no reason is provided, default is \"No Reason\".');
INSERT INTO `command` VALUES ('learn all my talents', '4', 'Syntax: .learn all my talents\r\n\r\nLearn all talents (and spells with first rank learned as talent) available for his class.');
INSERT INTO `command` VALUES ('learn all my spells', '4', 'Syntax: .learn all my spells\r\n\r\nLearn all spells (except talents and spells with first rank learned as talent) available for his class.');
INSERT INTO `command` VALUES ('learn all my pettalents', '4', 'Syntax: .learn all my pettalents\r\n\r\nLearn all talents for your pet available for his creature type (only for hunter pets).');
INSERT INTO `command` VALUES ('learn all my class', '4', 'Syntax: .learn all my class\r\n\r\nLearn all spells and talents available for his class.');
INSERT INTO `command` VALUES ('learn all gm', '4', 'Syntax: .learn all gm\r\n\r\nLearn all default spells for Game Masters.');
INSERT INTO `command` VALUES ('learn all lang', '4', 'Syntax: .learn all lang\r\n\r\nLearn all languages');
INSERT INTO `command` VALUES ('learn all default', '4', 'Syntax: .learn all default [$playername]\r\n\r\nLearn for selected/$playername player all default spells for his race/class and spells rewarded by completed quests.');
INSERT INTO `command` VALUES ('learn', '4', 'Syntax: .learn #spell [all]\r\n\r\nSelected character learn a spell of id #spell. If \'all\' provided then all ranks learned.');
INSERT INTO `command` VALUES ('modify scale', '4', '.modify scale #scale\nModify size of the selected player or creature to \"normal scale\"*rate. If no player or creature is selected, modify your size.\n#rate may range from 0.1 to 10.');
INSERT INTO `command` VALUES ('learn all crafts', '4', 'Syntax: .learn crafts\r\n\r\nLearn all professions and recipes.');
INSERT INTO `command` VALUES ('levelup', '5', 'Syntax: .levelup [$playername] [#numberoflevels]\r\n\r\nIncrease/decrease the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.');
INSERT INTO `command` VALUES ('linkgrave', '4', 'Syntax: .linkgrave #graveyard_id [alliance|horde]\r\n\r\nLink current zone to graveyard for any (or alliance/horde faction ghosts). This let character ghost from zone teleport to graveyard after die if graveyard is nearest from linked to zone and accept ghost of this faction. Add only single graveyard at another map and only if no graveyards linked (or planned linked at same map).');
INSERT INTO `command` VALUES ('list auras', '2', 'Syntax: .list auras\nList auras (passive and active) of selected creature or player. If no creature or player is selected, list your own auras.');
INSERT INTO `command` VALUES ('list creature', '4', 'Syntax: .list creature #creature_id [#max_count]\r\n\r\nOutput creatures with creature id #creature_id found in world. Output creature guids and coordinates sorted by distance from character. Will be output maximum #max_count creatures. If #max_count not provided use 10 as default value.');
INSERT INTO `command` VALUES ('list item', '4', 'Syntax: .list item #item_id [#max_count]\r\n\r\nOutput items with item id #item_id found in all character inventories, mails, auctions, and guild banks. Output item guids, item owner guid, owner account and owner name (guild name and guid in case guild bank). Will be output maximum #max_count items. If #max_count not provided use 10 as default value.');
INSERT INTO `command` VALUES ('list object', '4', 'Syntax: .list object #gameobject_id [#max_count]\r\n\r\nOutput gameobjects with gameobject id #gameobject_id found in world. Output gameobject guids and coordinates sorted by distance from character. Will be output maximum #max_count gameobject. If #max_count not provided use 10 as default value.');
INSERT INTO `command` VALUES ('list', '4', 'Syntax: .list $subcommand\nType .list to see the list of possible subcommands or .help list $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('wp reload', '4', 'Syntax: .wp reload $pathid\nLoad path changes ingame - IMPORTANT: must be applied first for new paths before .wp load #pathid ');
INSERT INTO `command` VALUES ('reload spell_group', '4', 'Syntax: .reload spell_group\nReload spell_group table.');
INSERT INTO `command` VALUES ('lookup area', '4', 'Syntax: .lookup area $namepart\r\n\r\nLooks up an area by $namepart, and returns all matches with their area ID\'s.');
INSERT INTO `command` VALUES ('lookup creature', '4', 'Syntax: .lookup creature $namepart\r\n\r\nLooks up a creature by $namepart, and returns all matches with their creature ID\'s.');
INSERT INTO `command` VALUES ('lookup event', '4', 'Syntax: .lookup event $name\r\nAttempts to find the ID of the event with the provided $name.');
INSERT INTO `command` VALUES ('lookup faction', '4', 'Syntax: .lookup faction $name\r\nAttempts to find the ID of the faction with the provided $name.');
INSERT INTO `command` VALUES ('lookup item', '4', 'Syntax: .lookup item $itemname\r\n\r\nLooks up an item by $itemname, and returns all matches with their Item ID\'s.');
INSERT INTO `command` VALUES ('lookup itemset', '4', 'Syntax: .lookup itemset $itemname\r\n\r\nLooks up an item set by $itemname, and returns all matches with their Item set ID\'s.');
INSERT INTO `command` VALUES ('lookup map', '4', 'Syntax: .lookup map $namepart\r\n\r\nLooks up a map by $namepart, and returns all matches with their map ID\'s.');
INSERT INTO `command` VALUES ('lookup object', '4', 'Syntax: .lookup object $objname\r\n\r\nLooks up an gameobject by $objname, and returns all matches with their Gameobject ID\'s.');
INSERT INTO `command` VALUES ('lookup player account', '4', 'Syntax: .lookup player account $account ($limit) \r\n\r\n Searchs players, which account username is $account with optional parametr $limit of results.');
INSERT INTO `command` VALUES ('lookup player email', '4', 'Syntax: .lookup player email $email ($limit) \r\n\r\n Searchs players, which account email is $email with optional parametr $limit of results.');
INSERT INTO `command` VALUES ('lookup player ip', '4', 'Syntax: .lookup player ip $ip ($limit) \r\n\r\n Searchs players, which account ast_ip is $ip with optional parametr $limit of results.');
INSERT INTO `command` VALUES ('lookup quest', '5', 'Syntax: .lookup quest $namepart\r\n\r\nLooks up a quest by $namepart, and returns all matches with their quest ID\'s.');
INSERT INTO `command` VALUES ('lookup skill', '4', 'Syntax: .lookup skill $$namepart\r\n\r\nLooks up a skill by $namepart, and returns all matches with their skill ID\'s.');
INSERT INTO `command` VALUES ('lookup spell', '4', 'Syntax: .lookup spell $namepart\r\n\r\nLooks up a spell by $namepart, and returns all matches with their spell ID\'s.');
INSERT INTO `command` VALUES ('lookup taxinode', '4', 'Syntax: .lookup taxinode $substring\r\n\r\nSearch and output all taxinodes with provide $substring in name.');
INSERT INTO `command` VALUES ('lookup tele', '4', 'Syntax: .lookup tele $substring\r\n\r\nSearch and output all .tele command locations with provide $substring in name.');
INSERT INTO `command` VALUES ('lookup', '4', 'Syntax: .lookup $subcommand\nType .lookup to see the list of possible subcommands or .help lookup $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('maxskill', '4', 'Syntax: .maxskill\r\nSets all skills of the targeted player to their maximum values for its current level.');
INSERT INTO `command` VALUES ('modify speed walk', '3', 'Syntax: .modify speed bwalk #rate\r\n\r\nModify the speed of the selected player while running to \"normal walk speed\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('modify speed swim', '3', 'Syntax: .modify speed swim #rate\r\n\r\nModify the swim speed of the selected player to \"normal swim speed\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('modify drunk', '4', 'Syntax: .modify drunk #value\r\n Set drunk level to #value (0..100). Value 0 remove drunk state, 100 is max drunked state.');
INSERT INTO `command` VALUES ('modify energy', '2', 'Syntax: .modify energy #energy\r\n\r\nModify the energy of the selected player. If no player is selected, modify your energy.');
INSERT INTO `command` VALUES ('modify faction', '4', 'Syntax: .modify faction #factionid #flagid #npcflagid #dynamicflagid\r\n\r\nModify the faction and flags of the selected creature. Without arguments, display the faction and flags of the selected creature.');
INSERT INTO `command` VALUES ('modify speed fly', '3', '.modify speed fly #rate\nModify the flying speed of the selected player to \"normal flying speed\"*rate. If no player is selected, modify your speed.\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('modify gender', '4', 'Syntax: .modify gender male/female\r\n\r\nChange gender of selected player.');
INSERT INTO `command` VALUES ('modify honor', '4', 'Syntax: .modify honor $amount\r\n\r\nAdd $amount honor points to the selected player.');
INSERT INTO `command` VALUES ('modify hp', '2', 'Syntax: .modify hp #newhp\r\n\r\nModify the hp of the selected player. If no player is selected, modify your hp.');
INSERT INTO `command` VALUES ('modify mana', '2', 'Syntax: .modify mana #newmana\r\n\r\nModify the mana of the selected player. If no player is selected, modify your mana.');
INSERT INTO `command` VALUES ('modify money', '5', 'Syntax: .modify money #money\r\n.money #money\r\n\r\nAdd or remove money to the selected player. If no player is selected, modify your money.\r\n\r\n #gold can be negative to remove money.');
INSERT INTO `command` VALUES ('modify mount', '4', 'Syntax: .modify mount #id #speed\r\nDisplay selected player as mounted at #id creature and set speed to #speed value.');
INSERT INTO `command` VALUES ('modify phase', '2', 'Syntax: .modify phase #phasemask\r\n\r\nSelected character phasemask changed to #phasemask with related world vision update. Change active until in game phase changed, or GM-mode enable/disable, or re-login. Character pts pasemask update to same value.');
INSERT INTO `command` VALUES ('modify rage', '2', 'Syntax: .modify rage #newrage\r\n\r\nModify the rage of the selected player. If no player is selected, modify your rage.');
INSERT INTO `command` VALUES ('modify reputation', '4', 'Syntax: .modify reputation #repId (#repvalue | $rankname [#delta])\nSets the selected players reputation with faction #repId to #repvalue or to $reprank.\nIf the reputation rank name is provided, the resulting reputation will be the lowest reputation for that rank plus the delta amount, if specified.\nYou can use \'.pinfo rep\' to list all known reputation ids, or use \'.lookup faction $name\' to locate a specific faction id.');
INSERT INTO `command` VALUES ('modify runicpower', '4', 'Syntax: .modify runicpower #newrunicpower\r\n\r\nModify the runic power of the selected player. If no player is selected, modify your runic power.');
INSERT INTO `command` VALUES ('modify speed', '2', 'Syntax: .modify speed $speedtype #rate\r\n\r\nModify the running speed of the selected player to \"normal base run speed\"= 1. If no player is selected, modify your speed.\r\n\r\n$speedtypes may be fly, all, walk, backwalk, or swim.\r\n\r\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('modify spell', '4', 'TODO');
INSERT INTO `command` VALUES ('modify standstate', '4', 'Syntax: .modify standstate #emoteid\r\n\r\nChange the emote of your character while standing to #emoteid.');
INSERT INTO `command` VALUES ('modify speed backwalk', '4', 'Syntax: .modify speed backwalk #rate\r\n\r\nModify the speed of the selected player while running backwards to \"normal walk back speed\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('character titles', '4', 'Syntax: .character titles [$player_name]\r\n\r\nShow known titles list for selected player or player find by $player_name.');
INSERT INTO `command` VALUES ('modify speed all', '4', 'Syntax: .modify aspeed #rate\r\n\r\nModify all speeds -run,swim,run back,swim back- of the selected player to \"normalbase speed for this move type\"*rate. If no player is selected, modify your speed.\r\n\r\n #rate may range from 0.1 to 50.');
INSERT INTO `command` VALUES ('modify', '2', 'Syntax: .modify $subcommand\nType .modify to see the list of possible subcommands or .help modify $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('movegens', '4', 'Syntax: .movegens\r\n  Show movement generators stack for selected creature or player.');
INSERT INTO `command` VALUES ('neargrave', '4', 'Syntax: .neargrave [alliance|horde]\r\n\r\nFind nearest graveyard linked to zone (or only nearest from accepts alliance or horde faction ghosts).');
INSERT INTO `command` VALUES ('notify', '4', 'Syntax: .notify $MessageToBroadcast\r\n\r\nSend a global message to all players online in screen.');
INSERT INTO `command` VALUES ('npc set phase', '4', 'Syntax: .npc set phase #phasemask\r\n\r\nSelected unit or pet phasemask changed to #phasemask with related world vision update for players. In creature case state saved to DB and persistent. In pet case change active until in game phase changed for owner, owner re-login, or GM-mode enable/disable..');
INSERT INTO `command` VALUES ('npc set movetype', '4', 'Syntax: .npc set movetype [#creature_guid] stay/random/way [NODEL]\r\n\r\nSet for creature pointed by #creature_guid (or selected if #creature_guid not provided) movement type and move it to respawn position (if creature alive). Any existing waypoints for creature will be removed from the database if you do not use NODEL. If the creature is dead then movement type will applied at creature respawn.\r\nMake sure you use NODEL, if you want to keep the waypoints.');
INSERT INTO `command` VALUES ('npc set model', '4', 'Syntax: .npc set model #displayid\r\n\r\nChange the model id of the selected creature to #displayid.');
INSERT INTO `command` VALUES ('npc set link', '4', 'Syntax: .npc set link $creatureGUID\r\n\r\nLinks respawn of selected creature to the condition that $creatureGUID defined is alive.');
INSERT INTO `command` VALUES ('wpgps', '4', 'Syntax: .wpgps\n\nOutput current position to sql developer log as partial SQL query to be used in pathing');
INSERT INTO `command` VALUES ('npc say', '4', 'Syntax: .npc say $message\nMake selected creature say specified message.');
INSERT INTO `command` VALUES ('npc move', '4', 'Syntax: .npc move [#creature_guid]\r\n\r\nMove the targeted creature spawn point to your coordinates.');
INSERT INTO `command` VALUES ('npc playemote', '4', 'Syntax: .npc playemote #emoteid\r\n\r\nMake the selected creature emote with an emote of id #emoteid.');
INSERT INTO `command` VALUES ('npc follow stop', '4', 'Syntax: .npc follow stop\r\n\r\nSelected creature (non pet) stop follow you.');
INSERT INTO `command` VALUES ('npc info', '2', 'Syntax: .npc info\r\n\r\nDisplay a list of details for the selected creature.\r\n\r\nThe list includes:\r\n- GUID, Faction, NPC flags, Entry ID, Model ID,\r\n- Level,\r\n- Health (current/maximum),\n\r\n\r\n- Field flags, dynamic flags, faction template, \r\n- Position information,\r\n- and the creature type, e.g. if the creature is a vendor.');
INSERT INTO `command` VALUES ('npc follow', '4', 'Syntax: .npc follow start\r\n\r\nSelected creature start follow you until death/fight/etc.');
INSERT INTO `command` VALUES ('npc set flag', '4', 'Syntax: .npc set flag #npcflag\r\n\r\nSet the NPC flags of creature template of the selected creature and selected creature to #npcflag. NPC flags will applied to all creatures of selected creature template after server restart or grid unload/load.');
INSERT INTO `command` VALUES ('npc set factionid', '4', 'Syntax: .npc set factionid #factionid\r\n\r\nSet the faction of the selected creature to #factionid.');
INSERT INTO `command` VALUES ('npc set level', '4', 'Syntax: .npc set level #level\r\n\r\nChange the level of the selected creature to #level.\r\n\r\n#level may range from 1 to (CONFIG_MAX_PLAYER_LEVEL) + 3.');
INSERT INTO `command` VALUES ('npc delete', '4', 'Syntax: .npc delete [#guid]\r\n\r\nDelete creature with guid #guid (or the selected if no guid is provided)');
INSERT INTO `command` VALUES ('npc delete item', '4', 'Syntax: .npc delete item #itemId\r\n\r\nRemove item #itemid from item list of selected vendor.');
INSERT INTO `command` VALUES ('npc set allowmove', '4', 'Syntax: .npc set allowmove\r\n\r\nEnable or disable movement creatures in world. Not implemented.');
INSERT INTO `command` VALUES ('npc set entry', '4', 'Syntax: .npc set entry $entry\nSwitch selected creature with another entry from creature_template. - New creature.id value not saved to DB.');
INSERT INTO `command` VALUES ('npc add move', '4', 'Syntax: .npc add move #creature_guid [#waittime]\r\n\r\nAdd your current location as a waypoint for creature with guid #creature_guid. And optional add wait time.');
INSERT INTO `command` VALUES ('npc add item', '4', 'Syntax: .npc add item #itemId <#maxcount><#incrtime><#extendedcost>r\r\n\r\nAdd item #itemid to item list of selected vendor. Also optionally set max count item in vendor item list and time to item count restoring and items ExtendedCost.');
INSERT INTO `command` VALUES ('npc add formation', '4', 'Syntax: .npc add formation $leader\nAdd selected creature to a leader\'s formation.');
INSERT INTO `command` VALUES ('npc', '4', 'Syntax: .npc $subcommand\nType .npc to see the list of possible subcommands or .help npc $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('npc add', '4', 'Syntax: .npc add #creatureid\r\n\r\nSpawn a creature by the given template id of #creatureid.');
INSERT INTO `command` VALUES ('pdump load', '4', 'Syntax: .pdump load $filename $account [$newname] [$newguid]\r\nLoad character dump from dump file into character list of $account with saved or $newname, with saved (or first free) or $newguid guid.');
INSERT INTO `command` VALUES ('pdump write', '4', 'Syntax: .pdump write $filename $playerNameOrGUID\r\nWrite character dump with name/guid $playerNameOrGUID to file $filename.');
INSERT INTO `command` VALUES ('pdump', '4', 'Syntax: .pdump $subcommand\nType .pdump to see the list of possible subcommands or .help pdump $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('pet create', '4', 'Syntax: .pet create\r\n\r\nCreates a pet of the selected creature.');
INSERT INTO `command` VALUES ('pet learn', '4', 'Syntax: .pet learn\r\n\r\nLearn #spellid to pet.');
INSERT INTO `command` VALUES ('reload spell_proc', '4', 'Syntax: .reload spell_proc\nReload spell_proc table.');
INSERT INTO `command` VALUES ('pet unlearn', '4', 'Syntax: .pet unlean\r\n\r\nunLearn #spellid to pet.');
INSERT INTO `command` VALUES ('pet', '4', 'Syntax: .pet $subcommand\nType .pet to see the list of possible subcommands or .help pet $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('playall', '4', 'Syntax: .playall #soundid\r\n\r\nPlayer a sound to whole server.');
INSERT INTO `command` VALUES ('possess', '4', 'Syntax: .possess\r\n\r\nPossesses indefinitely the selected creature.');
INSERT INTO `command` VALUES ('quest add', '3', 'Syntax: .quest add #quest_id\r\n\r\nAdd to character quest log quest #quest_id. Quest started from item can\'t be added by this command but correct .additem call provided in command output.');
INSERT INTO `command` VALUES ('quest complete', '3', 'Syntax: .quest complete #questid\r\nMark all quest objectives as completed for target character active quest. After this target character can go and get quest reward.');
INSERT INTO `command` VALUES ('quest remove', '3', 'Syntax: .quest remove #quest_id\r\n\r\nSet quest #quest_id state to not completed and not active (and remove from active quest list) for selected player.');
INSERT INTO `command` VALUES ('quest', '3', 'Syntax: .quest $subcommand\nType .quest to see the list of possible subcommands or .help quest $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('reload all quest', '4', 'Syntax: .reload all quest\r\n\r\nReload all quest related tables if reload support added for this table and this table can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all npc', '4', 'Syntax: .reload all npc\nReload npc_option, npc_trainer, npc vendor, points of interest tables.');
INSERT INTO `command` VALUES ('reload all loot', '4', 'Syntax: .reload all loot\r\n\r\nReload all `*_loot_template` tables. This can be slow operation with lags for server run.');
INSERT INTO `command` VALUES ('reload all item', '4', 'Syntax: .reload all item\nReload page_text, item_enchantment_table tables.');
INSERT INTO `command` VALUES ('reload all locales', '4', 'Syntax: .reload all locales\r\n\r\nReload all `locales_*` tables with reload support added and that can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload all gossips', '4', 'Syntax: .reload all gossips\nReload gossip_menu, gossip_menu_option, gossip_scripts, points_of_interest tables.');
INSERT INTO `command` VALUES ('reload all', '4', 'Syntax: .reload all\r\n\r\nReload all tables with reload support added and that can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload areatrigger_questender', '4', 'Syntax: .reload areatrigger_questender\nReload areatrigger_questender table.');
INSERT INTO `command` VALUES ('reload areatrigger_tavern', '4', 'Syntax: .reload areatrigger_tavern\nReload areatrigger_tavern table.');
INSERT INTO `command` VALUES ('reload areatrigger_teleport', '4', 'Syntax: .reload areatrigger_teleport\nReload areatrigger_teleport table.');
INSERT INTO `command` VALUES ('reload autobroadcast', '4', 'Syntax: .reload autobroadcast\nReload autobroadcast table.');
INSERT INTO `command` VALUES ('reload command', '4', 'Syntax: .reload command\nReload command table.');
INSERT INTO `command` VALUES ('reload config', '4', 'Syntax: .reload config\r\n\r\nReload config settings (by default stored in trinityd.conf). Not all settings can be change at reload: some new setting values will be ignored until restart, some values will applied with delay or only to new objects/maps, some values will explicitly rejected to change at reload.');
INSERT INTO `command` VALUES ('reload creature_questender', '4', 'Syntax: .reload creature_questender\nReload creature_questender table.');
INSERT INTO `command` VALUES ('reload creature_linked_respawn', '4', 'Syntax: .reload creature_linked_respawn\r\nReload creature_linked_respawn table.');
INSERT INTO `command` VALUES ('reload creature_loot_template', '4', 'Syntax: .reload creature_loot_template\nReload creature_loot_template table.');
INSERT INTO `command` VALUES ('reload creature_queststarter', '4', 'Syntax: .reload creature_queststarter\nReload creature_queststarter table.');
INSERT INTO `command` VALUES ('reload disenchant_loot_template', '4', 'Syntax: .reload disenchant_loot_template\nReload disenchant_loot_template table.');
INSERT INTO `command` VALUES ('reload event_scripts', '4', 'Syntax: .reload event_scripts\nReload event_scripts table.');
INSERT INTO `command` VALUES ('reload fishing_loot_template', '4', 'Syntax: .reload fishing_loot_template\nReload fishing_loot_template table.');
INSERT INTO `command` VALUES ('reload game_graveyard_zone', '4', 'Syntax: .reload game_graveyard_zone\nReload game_graveyard_zone table.');
INSERT INTO `command` VALUES ('reload game_tele', '4', 'Syntax: .reload game_tele\nReload game_tele table.');
INSERT INTO `command` VALUES ('reload gameobject_involvedrelation', '4', 'Syntax: .reload gameobject_involvedrelation\nReload gameobject_involvedrelation table.');
INSERT INTO `command` VALUES ('reload gameobject_loot_template', '4', 'Syntax: .reload gameobject_loot_template\nReload gameobject_loot_template table.');
INSERT INTO `command` VALUES ('reload gameobject_queststarter', '4', 'Syntax: .reload gameobject_queststarter\nReload gameobject_queststarter table.');
INSERT INTO `command` VALUES ('reload gameobject_scripts', '4', 'Syntax: .reload gameobject_scripts\nReload gameobject_scripts table.');
INSERT INTO `command` VALUES ('reload gm_tickets', '4', 'Syntax: .reload gm_tickets\nReload gm_tickets table.');
INSERT INTO `command` VALUES ('reload item_enchantment_template', '4', 'Syntax: .reload item_enchantment_template\nReload item_enchantment_template table.');
INSERT INTO `command` VALUES ('reload item_loot_template', '4', 'Syntax: .reload item_loot_template\nReload item_loot_template table.');
INSERT INTO `command` VALUES ('reload locales_creature', '4', 'Syntax: .reload locales_creature\nReload locales_creature table.');
INSERT INTO `command` VALUES ('reload locales_gameobject', '4', 'Syntax: .reload locales_gameobject\nReload locales_gameobject table.');
INSERT INTO `command` VALUES ('reload locales_item', '4', 'Syntax: .reload locales_item\nReload locales_item table.');
INSERT INTO `command` VALUES ('reload locales_npc_text', '4', 'Syntax: .reload locales_npc_text\nReload locales_npc_text table.');
INSERT INTO `command` VALUES ('reload locales_page_text', '4', 'Syntax: .reload locales_page_text\nReload locales_page_text table.');
INSERT INTO `command` VALUES ('reload locales_points_of_interest', '4', 'Syntax: .reload locales_points_of_interest\nReload locales_point_of_interest table.');
INSERT INTO `command` VALUES ('reload locales_quest', '4', 'Syntax: .reload locales_quest\nReload locales_quest table.');
INSERT INTO `command` VALUES ('reload milling_loot_template', '4', 'Syntax: .reload milling_loot_template\nReload milling_loot_template table.');
INSERT INTO `command` VALUES ('reload npc_trainer', '4', 'Syntax: .reload npc_trainer\nReload npc_trainer table.');
INSERT INTO `command` VALUES ('reload npc_vendor', '4', 'Syntax: .reload npc_vendor\nReload npc_vendor table.');
INSERT INTO `command` VALUES ('reload page_text', '4', 'Syntax: .reload page_text\nReload page_text table.');
INSERT INTO `command` VALUES ('reload pickpocketing_loot_template', '4', 'Syntax: .reload pickpocketing_loot_template\nReload pickpocketing_loot_template table.');
INSERT INTO `command` VALUES ('reload points_of_interest', '4', 'Syntax: .reload points_of_interest\nReload points_of_interest table.');
INSERT INTO `command` VALUES ('reload prospecting_loot_template', '4', 'Syntax: .reload prospecting_loot_template\nReload prospecting_loot_template table.');
INSERT INTO `command` VALUES ('reload quest_end_scripts', '4', 'Syntax: .reload quest_end_scripts\nReload quest_end_scripts table.');
INSERT INTO `command` VALUES ('reload mail_loot_template', '4', 'Syntax: .reload quest_mail_loot_template\nReload quest_mail_loot_template table.');
INSERT INTO `command` VALUES ('reload quest_start_scripts', '4', 'Syntax: .reload quest_start_scripts\nReload quest_start_scripts table.');
INSERT INTO `command` VALUES ('reload quest_template', '4', 'Syntax: .reload quest_template\nReload quest_template table.');
INSERT INTO `command` VALUES ('reload reference_loot_template', '4', 'Syntax: .reload reference_loot_template\nReload reference_loot_template table.');
INSERT INTO `command` VALUES ('reload reserved_name', '4', 'Syntax: .reload reserved_name\nReload reserved_name table.');
INSERT INTO `command` VALUES ('reload skill_discovery_template', '4', 'Syntax: .reload skill_discovery_template\nReload skill_discovery_template table.');
INSERT INTO `command` VALUES ('reload skill_extra_item_template', '4', 'Syntax: .reload skill_extra_item_template\nReload skill_extra_item_template table.');
INSERT INTO `command` VALUES ('reload skill_fishing_base_level', '4', 'Syntax: .reload skill_fishing_base_level\nReload skill_fishing_base_level table.');
INSERT INTO `command` VALUES ('reload skinning_loot_template', '4', 'Syntax: .reload skinning_loot_template\nReload skinning_loot_template table.');
INSERT INTO `command` VALUES ('reload spell_area', '4', 'Syntax: .reload spell_area\nReload spell_area table.');
INSERT INTO `command` VALUES ('reload spell_bonus_data', '4', 'Syntax: .reload spell_bonus_data\nReload spell_bonus_data table.');
INSERT INTO `command` VALUES ('reload disables', '4', 'Syntax: .reload disables\r\nReload disables table.');
INSERT INTO `command` VALUES ('reload spell_group_stack_rules', '4', 'Syntax: .reload spell_group\nReload spell_group_stack_rules table.');
INSERT INTO `command` VALUES ('reload spell_learn_spell', '4', 'Syntax: .reload spell_learn_spell\nReload spell_learn_spell table.');
INSERT INTO `command` VALUES ('reload spell_linked_spell', '4', 'Usage: .reload spell_linked_spell\r\nReloads the spell_linked_spell DB table.');
INSERT INTO `command` VALUES ('reload spell_loot_template', '4', 'Syntax: .reload spell_loot_template\nReload spell_loot_template table.');
INSERT INTO `command` VALUES ('reload spell_pet_auras', '4', 'Syntax: .reload spell_pet_auras\nReload spell_pet_auras table.');
INSERT INTO `command` VALUES ('reload spell_proc_event', '4', 'Syntax: .reload spell_proc_event\nReload spell_proc_event table.');
INSERT INTO `command` VALUES ('reload spell_required', '4', 'Syntax: .reload spell_required\nReload spell_required table.');
INSERT INTO `command` VALUES ('reload spell_scripts', '4', 'Syntax: .reload spell_scripts\nReload spell_scripts table.');
INSERT INTO `command` VALUES ('reload spell_target_position', '4', 'Syntax: .reload spell_target_position\nReload spell_target_position table.');
INSERT INTO `command` VALUES ('reload spell_threats', '4', 'Syntax: .reload spell_threats\nReload spell_threats table.');
INSERT INTO `command` VALUES ('reload trinity_string', '4', 'Syntax: .reload trinity_string\nReload trinity_string table.');
INSERT INTO `command` VALUES ('reload waypoint_scripts', '4', 'Syntax: .reload waypoint_scripts\nReload waypoint_scripts table.');
INSERT INTO `command` VALUES ('reload', '4', 'Syntax: .reload $subcommand\nType .reload to see the list of possible subcommands or .help reload $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('reset achievements', '4', 'Syntax: .reset achievements [$playername]\r\n\r\nReset achievements data for selected or named (online or offline) character. Achievements for persistance progress data like completed quests/etc re-filled at reset. Achievements for events like kills/casts/etc will lost.');
INSERT INTO `command` VALUES ('reset all', '4', 'Syntax: .reset all spells\r\n\r\nSyntax: .reset all talents\r\n\r\nRequest reset spells or talents (including talents for all character\'s pets if any) at next login each existed character.');
INSERT INTO `command` VALUES ('reset honor', '4', 'Syntax: .reset honor [Playername]\r\n  Reset all honor data for targeted character.');
INSERT INTO `command` VALUES ('reset level', '4', 'Syntax: .reset level [Playername]\r\n  Reset level to 1 including reset stats and talents.  Equipped items with greater level requirement can be lost.');
INSERT INTO `command` VALUES ('reset spells', '4', 'Syntax: .reset spells [Playername]\r\n  Removes all non-original spells from spellbook.\r\n. Playername can be name of offline character.');
INSERT INTO `command` VALUES ('reset stats', '4', 'Syntax: .reset stats [Playername]\r\n  Resets(recalculate) all stats of the targeted player to their original VALUESat current level.');
INSERT INTO `command` VALUES ('reset talents', '4', 'Syntax: .reset talents [Playername]\r\n  Removes all talents of the targeted player or pet or named player. Playername can be name of offline character. With player talents also will be reset talents for all character\'s pets if any.');
INSERT INTO `command` VALUES ('reset', '4', 'Syntax: .reset $subcommand\nType .reset to see the list of possible subcommands or .help reset $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('respawn', '4', 'Syntax: .respawn\r\n\r\nRespawn all nearest creatures and GO without waiting respawn time expiration.');
INSERT INTO `command` VALUES ('revive', '2', 'Syntax: .revive\r\n\r\nRevive the selected player. If no player is selected, it will revive you.');
INSERT INTO `command` VALUES ('saveall', '4', 'Syntax: .saveall\r\n\r\nSave all characters in game.');
INSERT INTO `command` VALUES ('send items', '4', 'Syntax: .send items #playername \"#subject\" \"#text\" itemid1[:count1] itemid2[:count2] ... itemidN[:countN]\r\n\r\nSend a mail to a player. Subject and mail text must be in \"\". If for itemid not provided related count values then expected 1, if count > max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12.');
INSERT INTO `command` VALUES ('send mail', '4', 'Syntax: .send mail #playername \"#subject\" \"#text\"\r\n\r\nSend a mail to a player. Subject and mail text must be in \"\".');
INSERT INTO `command` VALUES ('send message', '4', 'Syntax: .send message $playername $message\r\n\r\nSend screen message to player from ADMINISTRATOR.');
INSERT INTO `command` VALUES ('send money', '4', 'Syntax: .send money #playername \"#subject\" \"#text\" #money\r\n\r\nSend mail with money to a player. Subject and mail text must be in \"\".');
INSERT INTO `command` VALUES ('server corpses', '4', 'Syntax: .server corpses\r\n\r\nTriggering corpses expire check in world.');
INSERT INTO `command` VALUES ('server idlerestart cancel', '4', 'Syntax: .server idlerestart cancel\r\n\r\nCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server idlerestart', '4', 'Syntax: .server idlerestart #delay\r\n\r\nRestart the server after #delay seconds if no active connections are present (no players). Use #exist_code or 2 as program exist code.');
INSERT INTO `command` VALUES ('server idleshutdown cancel', '4', 'Syntax: .server idleshutdown cancel\r\n\r\nCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server idleshutdown', '4', 'Syntax: .server idleshutdown #delay [#exist_code]\r\n\r\nShut the server down after #delay seconds if no active connections are present (no players). Use #exist_code or 0 as program exist code.');
INSERT INTO `command` VALUES ('server plimit', '4', 'Syntax: .server plimit [#num|-1|-2|-3|reset|player|moderator|gamemaster|administrator]\r\n\r\nWithout arg show current player amount and security level limitations for login to server, with arg set player linit ($num > 0) or securiti limitation ($num < 0 or security leme name. With `reset` sets player limit to the one in the config file');
INSERT INTO `command` VALUES ('server restart cancel', '4', 'Syntax: .server restart cancel\r\n\r\nCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server restart', '4', 'Syntax: .server restart #delay\r\n\r\nRestart the server after #delay seconds. Use #exist_code or 2 as program exist code.');
INSERT INTO `command` VALUES ('server set closed', '4', 'Syntax: server set closed on/off\r\n\r\nSets whether the world accepts new client connectsions.');
INSERT INTO `command` VALUES ('server set motd', '4', 'Syntax: .server set motd $MOTD\r\n\r\nSet server Message of the day.');
INSERT INTO `command` VALUES ('server shutdown cancel', '4', 'Syntax: .server shutdown cancel\r\n\r\nCancel the restart/shutdown timer if any.');
INSERT INTO `command` VALUES ('server shutdown', '4', 'Syntax: .server shutdown #delay [#exit_code]\r\n\r\nShut the server down after #delay seconds. Use #exit_code or 0 as program exit code.');
INSERT INTO `command` VALUES ('server', '4', 'Syntax: .server $subcommand\nType .server to see the list of possible subcommands or .help server $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('setskill', '4', 'Syntax: .setskill #skill #level [#max]\r\n\r\nSet a skill of id #skill with a current skill value of #level and a maximum value of #max (or equal current maximum if not provide) for the selected character. If no character is selected, you learn the skill.');
INSERT INTO `command` VALUES ('showarea', '4', 'Syntax: .showarea #areaid\r\n\r\nReveal the area of #areaid to the selected character. If no character is selected, reveal this area to you.');
INSERT INTO `command` VALUES ('tele add', '4', 'Syntax: .tele add $name\r\n\r\nAdd current your position to .tele command target locations list with name $name.');
INSERT INTO `command` VALUES ('tele del', '4', 'Syntax: .tele del $name\r\n\r\nRemove location with name $name for .tele command locations list.');
INSERT INTO `command` VALUES ('tele group', '3', 'Syntax: .tele group#location\r\n\r\nTeleport a selected player and his group members to a given location.');
INSERT INTO `command` VALUES ('unaura', '2', 'Syntax: .unaura #spellid\r\n\r\nRemove aura due to spell #spellid from the selected Unit.');
INSERT INTO `command` VALUES ('unban account', '4', 'Syntax: .unban account $Name\r\nUnban accounts for account name pattern.');
INSERT INTO `command` VALUES ('unban character', '4', 'Syntax: .unban character $Name\r\nUnban accounts for character name pattern.');
INSERT INTO `command` VALUES ('unban ip', '4', 'Syntax : .unban ip $Ip\r\nUnban accounts for IP pattern.');
INSERT INTO `command` VALUES ('unban', '4', 'Syntax: .unban $subcommand\nType .unban to see the list of possible subcommands or .help unban $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('unbindsight', '4', 'Syntax: .unbindsight\r\n\r\nRemoves bound vision. Cannot be used while currently possessing a target.');
INSERT INTO `command` VALUES ('unlearn', '4', 'Syntax: .unlearn #spell [all]\r\n\r\nUnlearn for selected player a spell #spell.  If \'all\' provided then all ranks unlearned.');
INSERT INTO `command` VALUES ('unpossess', '4', 'Syntax: .unpossess\r\n\r\nIf you are possessed, unpossesses yourself; otherwise unpossesses current possessed target.');
INSERT INTO `command` VALUES ('wchange', '4', 'Syntax: .wchange #weathertype #status\r\n\r\nSet current weather to #weathertype with an intensity of #status.\r\n\r\n#weathertype can be 1 for rain, 2 for snow, and 3 for sand. #status can be 0 for disabled, and 1 for enabled.');
INSERT INTO `command` VALUES ('wp event', '4', 'Syntax: .wp event $subcommand\nType .path event to see the list of possible subcommands or .help path event $subcommand to see info on subcommands.');
INSERT INTO `command` VALUES ('wp load', '4', 'Syntax: .wp load $pathid\nLoad pathid number for selected creature. Creature must have no waypoint data.');
INSERT INTO `command` VALUES ('wp show', '4', 'Syntax: .wp show $option\nOptions:\non $pathid (or selected creature with loaded path) - Show path\noff - Hide path\ninfo $slected_waypoint - Show info for selected waypoint.');
INSERT INTO `command` VALUES ('wp unload', '4', 'Syntax: .wp unload\nUnload path for selected creature.');
INSERT INTO `command` VALUES ('account addon', '4', 'Syntax: .account addon #addon\nSet expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk, 3 - cata.');
INSERT INTO `command` VALUES ('titles remove', '4', 'Syntax: .titles remove #title\r\nRemove title #title (id or shift-link) from known titles list for selected player.');
INSERT INTO `command` VALUES ('titles current', '4', 'Syntax: .titles current #title\r\nSet title #title (id or shift-link) as current selected titl for selected player. If title not in known title list for player then it will be added to list.');
INSERT INTO `command` VALUES ('titles add', '4', 'Syntax: .titles add #title\r\nAdd title #title (id or shift-link) to known titles list for selected player.');
INSERT INTO `command` VALUES ('titles set mask', '4', 'Syntax: .titles set mask #mask\r\n\r\nAllows user to use all titles from #mask.\r\n\r\n #mask=0 disables the title-choose-field');
INSERT INTO `command` VALUES ('channel set ownership', '4', 'Syntax: .channel set ownership $channel [on/off]\n\nGrant ownership to the first person that joins the channel.');
INSERT INTO `command` VALUES ('gobject info', '4', 'Syntax: .gobject info [$object_entry]\r\n\r\nQuery Gameobject information for selected gameobject or given entry.');
INSERT INTO `command` VALUES ('reload creature_template', '4', 'Syntax: .reload creature_template $entry\r\nReload the specified creature\'s template.');
INSERT INTO `command` VALUES ('reload creature_onkill_reputation', '4', 'Syntax: .reload creature_onkill_reputation\r\nReload creature_onkill_reputation table.');
INSERT INTO `command` VALUES ('reload conditions', '4', 'Reload conditions table.');
INSERT INTO `command` VALUES ('character deleted list', '4', 'Syntax: .character deleted list [#guid|$name]\r\n\r\nShows a list with all deleted characters.\r\nIf $name is supplied, only characters with that string in their name will be selected, if #guid is supplied, only the character with that GUID will be selected.');
INSERT INTO `command` VALUES ('character deleted restore', '4', 'Syntax: .character deleted restore #guid|$name [$newname] [#new account]\r\n\r\nRestores deleted characters.\r\nIf $name is supplied, only characters with that string in their name will be restored, if $guid is supplied, only the character with that GUID will be restored.\r\nIf $newname is set, the character will be restored with that name instead of the original one. If #newaccount is set, the character will be restored to specific account character list. This works only with one character!');
INSERT INTO `command` VALUES ('reload gossip_menu', '4', 'Syntax: .reload gossip_menu\nReload gossip_menu table.');
INSERT INTO `command` VALUES ('reload gossip_menu_option', '4', 'Syntax: .reload gossip_menu_option\nReload gossip_menu_option table.');
INSERT INTO `command` VALUES ('cast dest', '4', 'Syntax: .cast dest #spellid #x #y #z [triggered]\r\n  Selected target will cast #spellid at provided destination. If \'trigered\' or part provided then spell casted with triggered flag.');
INSERT INTO `command` VALUES ('reload all scripts', '4', 'Syntax: .reload all scripts\nReload gameobject_scripts, event_scripts, quest_end_scripts, quest_start_scripts, spell_scripts, db_script_string, waypoint_scripts tables.');
INSERT INTO `command` VALUES ('reload locales_gossip_menu_option', '4', 'Syntax: .reload locales_gossip_menu_option\nReload locales_gossip_menu_option table.');
INSERT INTO `command` VALUES ('reload quest_poi', '4', 'Syntax: .reload quest_poi\nReload quest_poi table.');
INSERT INTO `command` VALUES ('reload lfg_dungeon_rewards', '4', 'Syntax: .reload lfg_dungeon_rewards\nReload lfg_dungeon_rewards table.');
INSERT INTO `command` VALUES ('character changefaction', '4', 'Syntax: .character changefaction $name\r\n\r\nChange character faction.');
INSERT INTO `command` VALUES ('character changerace', '4', 'Syntax: .character changerace $name\r\n\r\nChange character race.');
INSERT INTO `command` VALUES ('ban playeraccount', '3', 'Syntax: .ban playeraccount $Name $bantime $reason\nBan account and kick player.\n$bantime: negative value leads to permban, otherwise use a timestring like \"4d20h3s\".');
INSERT INTO `command` VALUES ('reload creature_text', '4', 'Syntax: .reload creature_text\r\nReload creature_text table.');
INSERT INTO `command` VALUES ('debug areatriggers', '4', 'Syntax: .debug areatriggers\nToggle debug mode for areatriggers. In debug mode GM will be notified if reaching an areatrigger');
INSERT INTO `command` VALUES ('learn all recipes', '4', 'Syntax: .learn all recipes [$profession]\r\rLearns all recipes of specified profession and sets skill level to max.\rExample: .learn all recipes enchanting');
INSERT INTO `command` VALUES ('npc set spawndist', '4', 'Syntax: .npc set spawndist #dist\r\n\r\nAdjust spawndistance of selected creature to dist.');
INSERT INTO `command` VALUES ('npc set spawntime', '4', 'Syntax: .npc set spawntime #time \r\n\r\nAdjust spawntime of selected creature to time.');
INSERT INTO `command` VALUES ('npc add temp', '4', 'Syntax: .npc add temp\r\n\r\nAdds temporary NPC, not saved to database.');
INSERT INTO `command` VALUES ('npc textemote', '4', 'Syntax: .npc textemote #emoteid\r\n\r\nMake the selected creature to do textemote with an emote of id #emoteid.');
INSERT INTO `command` VALUES ('npc whisper', '4', 'Syntax: .npc whisper #playerguid #text\r\nMake the selected npc whisper #text to  #playerguid.');
INSERT INTO `command` VALUES ('npc yell', '4', 'Syntax: .npc yell $message\nMake selected creature yell specified message.');
INSERT INTO `command` VALUES ('wp add', '4', 'Syntax: .wp add\r\n\r\nAdd a waypoint for the selected creature at your current position.');
INSERT INTO `command` VALUES ('reload all spell', '4', 'Syntax: .reload all spell\r\n\r\nReload all `spell_*` tables with reload support added and that can be _safe_ reloaded.');
INSERT INTO `command` VALUES ('reload access_requirement', '4', 'Syntax: .reload access_requirement\nReload access_requirement table.');
INSERT INTO `command` VALUES ('reload achievement_criteria_data', '4', 'Syntax: .reload achievement_criteria_data\nReload achievement_criteria_data table.');
INSERT INTO `command` VALUES ('reload achievement_reward', '4', 'Syntax: .reload achievement_reward\nReload achievement_reward table.');
INSERT INTO `command` VALUES ('reload all achievement', '4', 'Syntax: .reload all achievement\r\n\r\nReload achievement_reward, achievement_criteria_data tables.');
INSERT INTO `command` VALUES ('reload all area', '4', 'Syntax: .reload all area\r\n\r\nReload areatrigger_teleport, areatrigger_tavern, game_graveyard_zone tables.');
INSERT INTO `command` VALUES ('reload auctions', '4', 'Syntax: .reload auctions\nReload dynamic data tables from the database.');
INSERT INTO `command` VALUES ('reload mail_level_reward', '4', 'Syntax: .reload mail_level_reward\nReload mail_level_reward table.');
INSERT INTO `command` VALUES ('reload smart_scripts', '4', 'Syntax: .reload smart_scripts\nReload smart_scripts table.');
INSERT INTO `command` VALUES ('reload vehicle_accessory', '4', 'Syntax: .reload vehicle_accessory\n\nReloads GUID-based vehicle accessory definitions from the database.');
INSERT INTO `command` VALUES ('reload vehicle_template_accessory', '4', 'Syntax: .reload vehicle_template_accessory\n\nReloads entry-based vehicle accessory definitions from the database.');
INSERT INTO `command` VALUES ('dev', '4', 'Syntax: .dev [on/off]\r\n\r\nEnable or Disable in game Dev tag or show current state if on/off not provided.');
INSERT INTO `command` VALUES ('go ticket', '3', 'Syntax: .go ticket #ticketid\r\nTeleports the user to the location where $ticketid was created.');
INSERT INTO `command` VALUES ('reload waypoint_data', '4', 'Syntax: .reload waypoint_data will reload waypoint_data table.');
INSERT INTO `command` VALUES ('group', '4', 'Syntax: .group $subcommand\nType .group to see the list of possible subcommands or .help group $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('group leader', '4', 'Syntax: .group leader [$characterName]\n\nSets the given character as his group\'s leader.');
INSERT INTO `command` VALUES ('group disband', '4', 'Syntax: .group disband [$characterName]\n\nDisbands the given character\'s group.');
INSERT INTO `command` VALUES ('group remove', '4', 'Syntax: .group remove [$characterName]\n\nRemoves the given character from his group.');
INSERT INTO `command` VALUES ('debug moveflags', '4', 'Syntax: .debug moveflags [$newMoveFlags [$newMoveFlags2]]\r\nNo params given will output the current moveflags of the target');
INSERT INTO `command` VALUES ('reload locales_creature_text', '4', 'Syntax: .reload locales_creature_text\nReload locales_creature_text Table.');
INSERT INTO `command` VALUES ('npc set data', '4', 'Syntax: .npc set data $field $data\nSets data for the selected creature. Used for testing Scripting');
INSERT INTO `command` VALUES ('disable add quest', '4', 'Syntax: .disable add quest $entry $flag $comment');
INSERT INTO `command` VALUES ('disable add map', '4', 'Syntax: .disable add map $entry $flag $comment');
INSERT INTO `command` VALUES ('disable add battleground', '4', 'Syntax: .disable add battleground $entry $flag $comment');
INSERT INTO `command` VALUES ('disable add achievement_criteria', '4', 'Syntax: .disable add achievement_criteria $entry $flag $comment');
INSERT INTO `command` VALUES ('disable add spell', '4', 'Syntax: .disable add spell $entry $flag $comment');
INSERT INTO `command` VALUES ('disable add outdoorpvp', '4', 'Syntax: .disable add outdoorpvp $entry $flag $comment');
INSERT INTO `command` VALUES ('disable add vmap', '4', 'Syntax: .disable add vmap $entry $flag $comment');
INSERT INTO `command` VALUES ('disable remove quest', '4', 'Syntax: .disable remove quest $entry');
INSERT INTO `command` VALUES ('disable remove map', '4', 'Syntax: .disable remove map $entry');
INSERT INTO `command` VALUES ('disable remove battleground', '4', 'Syntax: .disable remove battleground $entry');
INSERT INTO `command` VALUES ('disable remove achievement_criteria', '4', 'Syntax: .disable remove achievement_criteria $entry');
INSERT INTO `command` VALUES ('disable remove spell', '4', 'Syntax: .disable remove spell $entry');
INSERT INTO `command` VALUES ('disable remove outdoorpvp', '4', 'Syntax: .disable remove outdoorpvp $entry');
INSERT INTO `command` VALUES ('disable remove vmap', '4', 'Syntax: .disable remove vmap $entry');
INSERT INTO `command` VALUES ('bf stop', '4', 'Syntax: .bf stop #battleid');
INSERT INTO `command` VALUES ('bf enable', '4', 'Syntax: .bf enable #battleid');
INSERT INTO `command` VALUES ('bf switch', '4', 'Syntax: .bf switch #battleid');
INSERT INTO `command` VALUES ('quest reward', '3', 'Syntax: .quest reward #questId\n\nGrants quest reward to selected player and removes quest from his log (quest must be in completed state).');
INSERT INTO `command` VALUES ('bf start', '4', 'Syntax: .bf start #battleid');
INSERT INTO `command` VALUES ('arena', '4', 'Syntax: .arena #subcommand');
INSERT INTO `command` VALUES ('arena del', '4', 'Syntax: .arena del #subcommand');
INSERT INTO `command` VALUES ('arena del 2x2', '4', 'Syntax: .arena del 2x2 #playername\nDelete team with player.');
INSERT INTO `command` VALUES ('arena del 3x3', '4', 'Syntax: .arena del 3x3 #playername\nDelete team with player.');
INSERT INTO `command` VALUES ('arena del 5x5', '4', 'Syntax: .arena del 5x5 #playername\nDelete team with player.');
INSERT INTO `command` VALUES ('custom', '4', 'Syntax: .custom #subcommand');
INSERT INTO `command` VALUES ('custom arenasliver', '4', 'Syntax: .custom arenasliver #playername');
INSERT INTO `command` VALUES ('custom unarenasliver', '4', 'Syntax: .custom unarenasliver #playername');
INSERT INTO `command` VALUES ('custom lootcleanid', '4', 'Syntax: .custom lootcleanid #playername #ItemId:#Count ...');
INSERT INTO `command` VALUES ('custom unlootcleanid', '4', 'Syntax: .custom unlootcleanid #playername #ItemId:#Count ...');
INSERT INTO `command` VALUES ('bf timer', '4', 'Syntax: .bf timer #battleid #timer');
INSERT INTO `command` VALUES ('character getrename ', '4', 'Syntax: .character getrename [#guid|$oldName]\nShow the new name of the player #guid or #oldName');
INSERT INTO `command` VALUES ('wordfilter badword add', '4', 'Syntax: .wordfilter badword add #word');
INSERT INTO `command` VALUES ('wordfilter badword remove', '4', 'Syntax: .wordfilter badword remove #word');
INSERT INTO `command` VALUES ('wordfilter badword list', '4', 'Syntax: .wordfilter badword list');
INSERT INTO `command` VALUES ('wordfilter mod', '4', 'Syntax: .wordfilter mod on/off');
INSERT INTO `command` VALUES ('reload npc_spellclick_spells', '4', 'Syntax: .reload npc_spellclick_spells');
INSERT INTO `command` VALUES ('reload eluna', '4', 'Syntax: .reload eluna');
INSERT INTO `command` VALUES ('reset spec', '4', 'Syntax: .reset spec');
INSERT INTO `command` VALUES ('account create', '4', 'Syntax: .account create $account $password\r\n\r\nCreate account and set password to it.');
INSERT INTO `command` VALUES ('account onlinelist', '4', 'Syntax: .account onlinelist\r\n\r\nShow list of online accounts.');
INSERT INTO `command` VALUES ('account set gmlevel', '4', 'Syntax: .account set gmlevel [$account] #level [#realmid]\r\n\r\nSet the security level for targeted player (can\'t be used at self) or for account $name to a level of #level on the realm #realmID.\r\n\r\n#level may range from 0 to 3.\r\n\r\n#reamID may be -1 for all realms.');
INSERT INTO `command` VALUES ('character deleted delete', '4', 'Syntax: .character deleted delete #guid|$name\r\n\r\nCompletely deletes the selected characters.\r\nIf $name is supplied, only characters with that string in their name will be deleted, if #guid is supplied, only the character with that GUID will be deleted.');
INSERT INTO `command` VALUES ('character deleted old', '4', 'Syntax: .character deleted old [#keepDays]\r\n\r\nCompletely deletes all characters with deleted time longer #keepDays. If #keepDays not provided the  used value from mangosd.conf option \'CharDelete.KeepDays\'. If referenced config option disabled (use 0 value) then command can\'t be used without #keepDays.');
INSERT INTO `command` VALUES ('achievement add', '4', 'Syntax: .achievement add $achievement\nAdd an achievement to the targeted player.\n$achievement: can be either achievement id or achievement link');
INSERT INTO `command` VALUES ('achievement', '4', 'Syntax: .achievement $subcommand\nType .achievement to see the list of possible subcommands or .help achievement $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('account delete', '4', 'Syntax: .account delete $account\r\n\r\nDelete account with all characters.');
INSERT INTO `command` VALUES ('account password', '2', 'Syntax: .account password $old_password $new_password $new_password\r\n\r\nChange your account password.');
INSERT INTO `command` VALUES ('account set password', '2', 'Syntax: .account set password $account $password $password\r\n\r\nSet password for account.');
INSERT INTO `command` VALUES ('character erase', '4', 'Syntax: .character erase $name\r\n\r\nDelete character $name. Character finally deleted in case any deleting options.');
INSERT INTO `command` VALUES ('debug Mod32Value', '4', 'Syntax: .debug Mod32Value #field #value\r\n\r\nAdd #value to field #field of your character.');
INSERT INTO `command` VALUES ('modify bit', '4', 'Syntax: .modify bit #field #bit\r\n\r\nToggle the #bit bit of the #field field for the selected player. If no player is selected, modify your character.');
INSERT INTO `command` VALUES ('server exit', '4', 'Syntax: .server exit\r\n\r\nTerminate trinity-core NOW. Exit code 0.');
INSERT INTO `command` VALUES ('server set loglevel', '4', 'Syntax: .server set loglevel $facility $name $loglevel. $facility can take the values: appender (a) or logger (l). $loglevel can take the values: disabled (0),\n trace (1),\n debug (2),\n info (3),\n warn (4),\n error (5) or fatal (6)');
INSERT INTO `command` VALUES ('arena closeseason', '4', 'Syntax: .arena closeseason\nReward players for season.');
INSERT INTO `command` VALUES ('lfg player', '4', 'Syntax: .lfg player\n Shows information about player (state, roles, comment, dungeons selected).');
INSERT INTO `command` VALUES ('lfg group', '4', 'Syntax: .lfg group\n Shows information about all players in the group  (state, roles, comment, dungeons selected).');
INSERT INTO `command` VALUES ('lfg queue', '4', 'Syntax: .lfg queue\n Shows info about current lfg queues.');
INSERT INTO `command` VALUES ('lfg clean', '4', 'Syntax: .flg clean\n Cleans current queue, only for debugging purposes.');
INSERT INTO `command` VALUES ('lfg options', '4', 'Syntax: .lfg options [new value]\n Shows current lfg options. New value is set if extra param is present.');
INSERT INTO `command` VALUES ('baninfo playeraccount', '4', 'Syntax: .baninfo playeraccount $playerName\r\nWatch full information about a specific ban.');
INSERT INTO `command` VALUES ('banlist playeraccount', '4', 'Syntax: .banlist playeraccount [$Name]\r\nSearches the banlist for accounts according to a character name pattern.');
INSERT INTO `command` VALUES ('ticket viewid', '1', 'Usage: .ticket viewid $ticketid.\r\nReturns details about specified ticket. Ticket must be open and not deleted.');
INSERT INTO `command` VALUES ('ticket viewname', '1', 'Usage: .ticket viewname $creatorname. \r\nReturns details about specified ticket. Ticket must be open and not deleted.');
INSERT INTO `command` VALUES ('battle', '4', 'Syntax: .battle\nCommands for battlerealm.');
INSERT INTO `command` VALUES ('battle restart', '4', 'Syntax: .battle restart\nSome description.');
INSERT INTO `command` VALUES ('battle shutdown', '4', 'Syntax: .battle shutdown\nSome description.');
INSERT INTO `command` VALUES ('battle shutdown cancel', '4', 'Syntax: .battle shutdown cancel\nSome description.');
INSERT INTO `command` VALUES ('battle restart cancel', '4', 'Syntax: .battle shutdown cancel\nSome description.');
INSERT INTO `command` VALUES ('eventobject', '4', 'Syntax: .eventobject $subcommand\nType .eventobject to see the list of possible subcommands or .help eventobject $subcommand to see info on subcommands');
INSERT INTO `command` VALUES ('eventobject add', '4', 'Syntax: .eventobject add #eventobjectid <#radius><#spell><#worldsafe>\r\n\r\nSpawn a creature by the given template id of #creatureid.');
INSERT INTO `command` VALUES ('eventobject delete', '4', 'Syntax: .eventobject delete [#guid]\r\n\r\nDelete creature with guid #guid (or the selected if no guid is provided)');
INSERT INTO `command` VALUES ('eventobject near', '4', null);
INSERT INTO `command` VALUES ('setscenario', '4', null);
INSERT INTO `command` VALUES ('achievement criteria', '4', null);
INSERT INTO `command` VALUES ('quest status', '0', 'Syntax: .quest status #ID');
INSERT INTO `command` VALUES ('reload donate_vendor', '4', 'Syntax: .reload donate_vendor');
INSERT INTO `command` VALUES ('custom modmoney', '4', 'Syntax: .custom modmoney [name] [gold]');
INSERT INTO `command` VALUES ('debug pvpstatenable', '4', 'Syntax: .debug pvpstatenable');
INSERT INTO `command` VALUES ('debug pvpstatdisable', '4', 'Syntax: .debug pvpstatdisable');
INSERT INTO `command` VALUES ('lookup guild', '4', 'Syntax: .lookup guild [id] . Find name of guild by guid id');
INSERT INTO `command` VALUES ('spectate', '0', 'Syntax: .spectate $subcommand.\nUse .help sppectate');
INSERT INTO `command` VALUES ('spectate view', '0', 'Syntax: .spectate view #player\nAllow player to spectate arena from anotherplayer.');
INSERT INTO `command` VALUES ('spectate leave', '0', 'Syntax: .spectate leave\nDisable spectator mode.');
INSERT INTO `command` VALUES ('spectate player', '0', 'Syntax: .spectate player #player\nAllow to spectate player.');
INSERT INTO `command` VALUES ('spectate reset', '0', 'Syntax: .spectate reset\nSend addon data.');
INSERT INTO `command` VALUES ('conversation', '4', 'Syntax: .conversation [#id]');
INSERT INTO `command` VALUES ('addmythickey', '4', 'Syntax: .addmythickey [#mapID] [#level] [#affix1] [#affix2] [#affix3]');
INSERT INTO `command` VALUES ('worldquest', '4', 'Syntax: .worldquest\r\n\r\nGenarate mew world quest data');
INSERT INTO `command` VALUES ('worldquest clear', '4', 'Syntax: .worldquest\r\n\r\nClear world quest data');
INSERT INTO `command` VALUES ('gomove', '4', '');
INSERT INTO `command` VALUES ('donate token info', '4', 'Syntax: .don token info [name] . Return info about tokens by this char. it is work only with online char');
INSERT INTO `command` VALUES ('donate token modify', '4', 'Syntax: .don tonel mod [name] [value]. Mod tokens by this char');
INSERT INTO `command` VALUES ('list aminfo', '4', 'Syntax: .list aminfo\nList auras (passive and active) of selected creature or player. If no creature or player is selected, list your own auras.');
INSERT INTO `command` VALUES ('deltransmogbyitem', '4', 'Syntax: .deltransmogbyitem [name] [itemid]');
INSERT INTO `command` VALUES ('debug hostile', '4', 'Syntax: .debug hostile');
INSERT INTO `command` VALUES ('debug combat', '0', 'Syntax: .debug combat');
INSERT INTO `command` VALUES ('gobject set size', '4', 'Syntax: .gobject set size #guid #size\r\n\r\nGameobject with DB guid #guid size changed to #size. Gameobject size saved to DB and persistent. Does not affect other gameobjects of same entry. Using 0 size uses the default size from template.');
INSERT INTO `command` VALUES ('npc set size', '4', 'Syntax: .npc set size #guid #size\r\n\rCreature with DB guid #guid size changed to #size. Creature size saved to DB and persistent. Does not affect other creature of same entry. Using 0 size uses the default size from template.');
INSERT INTO `command` VALUES ('custom antiflood', '2', 'Syntax: .custom antiflood #subcommand');
INSERT INTO `command` VALUES ('custom antiflood add', '2', 'Syntax: .custom antiflood add [penalty] [text] . Add [text] in bad sentences and set [penalty[ for it. if penalty > 0 - then it is mute in minutes, if < 0 - permanent ban. If it is = 0, then it is accepted phrase without penalties');
INSERT INTO `command` VALUES ('custom antiflood update', '2', 'Syntax: .custom antiflood update [id] [penalty]. Set for current [id] of bad sentences [penalty[. if penalty > 0 - then it is mute in minutes, if < 0 - permanent ban. If it is = 0, then it is accepted phrase without penalties');
INSERT INTO `command` VALUES ('custom antiflood list', '2', 'Syntax: .custom antiflood list [page] Display [page] of bad sentences. Default page = 1');
INSERT INTO `command` VALUES ('custom antiflood addfromlfg', '2', 'Syntax. custom antiflood addfromlfg [name] [penalty]. Add text, that player with [name] said last time on lfg. Set penalty for it. if penalty > 0 - then it is mute in minutes, if < 0 - permanent ban. If it is = 0, then it is accepted phrase without penalties');
INSERT INTO `command` VALUES ('custom cleanguildachiev', '4', 'Syntax: .custom cleanguildachiev #GuildID #AchieveID');
INSERT INTO `command` VALUES ('donate add ', '4', 'Syntax: .donate add [name] [id] [tokens]');
INSERT INTO `command` VALUES ('donate mount fly add', '4', null);
INSERT INTO `command` VALUES ('donate mount fly del', '4', null);
INSERT INTO `command` VALUES ('donate mount ground add', '4', null);
INSERT INTO `command` VALUES ('donate mount ground del', '4', null);
INSERT INTO `command` VALUES ('donate morph add', '4', null);
INSERT INTO `command` VALUES ('donate morph del', '4', null);
INSERT INTO `command` VALUES ('custom cleanachievement', '4', 'Syntax: .custom cleanachievement #Nickname #AchieveID or .custom cleanachievement #Nickname #Instance (#Instance - tos, nighthold, antorus, emeraldnightmare, tov) for clean all achievements from selected instance.');
INSERT INTO `command` VALUES ('ban hwidbyacc', '3', 'Syntax: ban hwidbyacc [accname] [Reason]');
INSERT INTO `command` VALUES ('debug lfg', '4', null);
INSERT INTO `command` VALUES ('debug logs', '0', null);
